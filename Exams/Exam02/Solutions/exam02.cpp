#include <iostream>
#include <string>
using namespace std;

/**************************************************************************************************
 * Fundamentals
 **************************************************************************************************
 * a. 
 * 	when code needs to be executed for either outcome of the condition
 * b.
 * 	while(true)
 * 	{
 * 		cout << "Forever More";
 * 	}
 * c.
 * 	void T(int,string&,string&);
 * d.
 * 	s = 0;
 * 	for(int i = 7;i <= 500;i += 14)
 * 	{
 * 		s += i;
 * 	}
 * e.
 * 	int A(int n)
 * 	{
 * 		return 2 * n * n;
 * 	} 
 *************************************************************************************************/

/**************************************************************************************************
 * Problem Solving solution should be written between below this comment and 
 * before the main function
 **************************************************************************************************/ 

string SystemAnalysis(double a1,double a2,double a3,double a4,double s1,double s2,double& x,double& y)
{
	double det = a1 * a4 - a2 * a3;

	if(det != 0)
	{
		x = (s1 * a4 - s2 * a2) / det;
		y = (s2 * a1 - s1 * a3) / det;
		return "independent";
	}
	else
	{
		double n = (a1 + a2 + s1) / (a3 + a4 + s2);

		if(a1 == n * a3 && a2 == n * a4 && s1 == n * s2)
		{
			if(a2 == 0 && a4 == 0)
			{
				x = s1 / a1;
				y = 0;
			}
			else 
			{
				x = 0;
				y = s1 / a2;
			}
			return "dependent";
		}
		else 
		{
			x = 0;
			y = 0;
			return "inconsistent";
		}
	}
}

int main()
{
	double x, y;
	cout << SystemAnalysis(2,3,1,-6,8,-11,x,y);
	cout << " (" << x << "," << y << ")\n";

	cout << SystemAnalysis(1,1,1,1,5,5,x,y);
	cout << " (" << x << "," << y << ")\n";
	
	cout << SystemAnalysis(1,1,1,1,8,3,x,y);
	cout << " (" << x << "," << y << ")\n";
	return 0;
}


/**************************************************************************************************
 * Tracing
 **************************************************************************************************
 * let L := (a <= 0 || b <= 0), M := (a < b), N := (i <  m * n), O := (i % n == 0)
 * 01. a := 4, b := 7
 * 02. L := F
 * 03. m := 11
 * 04. M : T
 * 05. n := 4
 * 06. m := 7
 * 07. i := 7
 * 08. N := T
 * 09. O := F
 * 10. i := 14
 * 11. N := T
 * 12. O := F
 * 13. i := 21
 * 14. N := T
 * 15. O := F
 * 16. i := 28
 * 17. N := F
 * 18. return := 28 
 *
 *************************************************************************************************/


/**************************************************************************************************
 * Debugging
 **************************************************************************************************
 * a.
 * 	01. int O(int n)
 * 	05. return 0;
 * 	07. int s = n + 1;
 * 	13. s += 1;
 * b.
 * 	03. bool d = (a == b || a == c || b == c);
 * 	05. return (d && e);
 * 	06. }
 * c.
 * 	01. void G(char& c)
 * 	09. break;
 * 	11. }
 *************************************************************************************************/

